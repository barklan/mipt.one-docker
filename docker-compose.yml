version: '3.5'

services:
  web:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: gunicorn hello_django.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
      # - type: bind
      #   source: ./imgbank
      #   target: /home/app/web/mediafiles/imgbank
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db
  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
      # - type: bind
      #   source: ./imgbank
      #   target: /home/app/web/mediafiles/imgbank
      #   RW: true
    # ports:
    #   - "80:80"
    depends_on:
      - web
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.my-app.rule=Host(`mipt.one`)'
      - 'traefik.http.routers.my-app.tls=true'
      - 'traefik.http.routers.my-app.tls.certresolver=lets-encrypt'
  traefik:
    image: traefik:2.1
    restart: always
    ports:
      - '80:80'
      - '443:443'
    volumes:
    - ./traefik:/etc/traefik
    - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  postgres_data:
  static_volume:
  media_volume:
